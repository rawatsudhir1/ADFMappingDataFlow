{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"DataFlowblobstorage": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowExecution')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Athlete_Events",
								"type": "DatasetReference"
							},
							"name": "AthleteDS"
						},
						{
							"dataset": {
								"referenceName": "NOCRegions",
								"type": "DatasetReference"
							},
							"name": "RegionDS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BadDataOutput",
								"type": "DatasetReference"
							},
							"name": "StoreBadData"
						},
						{
							"dataset": {
								"referenceName": "GoodDataOutput",
								"type": "DatasetReference"
							},
							"name": "Insights"
						},
						{
							"dataset": {
								"referenceName": "GoodDataOutput",
								"type": "DatasetReference"
							},
							"name": "Insight2"
						}
					],
					"transformations": [
						{
							"name": "SortRegionDS"
						},
						{
							"name": "ConditionalSplit1"
						},
						{
							"name": "SortAthleteDS"
						},
						{
							"name": "JoinDatasets"
						},
						{
							"name": "AggRegionSportMedal"
						},
						{
							"name": "OnlyMedalRecords"
						},
						{
							"name": "AggYearRegionMedal"
						}
					],
					"script": "\n\nsource(output(\n\t\tID as string,\n\t\tName as string,\n\t\tSex as string,\n\t\tAge as string,\n\t\tHeight as string,\n\t\tWeight as string,\n\t\tTeam as string,\n\t\tNOC as string,\n\t\tGames as string,\n\t\tYear as string,\n\t\tSeason as string,\n\t\tCity as string,\n\t\tSport as string,\n\t\tEvent as string,\n\t\tMedal as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> AthleteDS\nsource(output(\n\t\tNOC as string,\n\t\tregion as string,\n\t\tnotes as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> RegionDS\nRegionDS sort(asc(NOC, true)) ~> SortRegionDS\nAthleteDS split(toInteger(Age)>0 && toInteger(Height)>0 && toInteger(Weight)>0,\n\tdisjoint: false) ~> ConditionalSplit1@(GoodData, BadData)\nConditionalSplit1@GoodData sort(asc(NOC, true)) ~> SortAthleteDS\nSortAthleteDS, SortRegionDS join(ConditionalSplit1@GoodData@NOC == RegionDS@NOC,\n\tjoinType:'left',\n\tbroadcast: 'none')~> JoinDatasets\nJoinDatasets aggregate(groupBy(region,\n\t\tSport,\n\t\tMedal),\n\tID = count(ID)) ~> AggRegionSportMedal\nAggRegionSportMedal filter(Medal!='NA') ~> OnlyMedalRecords\nJoinDatasets aggregate(groupBy(Year,\n\t\tregion,\n\t\tMedal),\n\tID = count(ID)) ~> AggYearRegionMedal\nConditionalSplit1@BadData sink(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> StoreBadData\nOnlyMedalRecords sink(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> Insights\nAggYearRegionMedal sink(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> Insight2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Athlete_Events')]",
				"[concat(variables('factoryId'), '/datasets/NOCRegions')]",
				"[concat(variables('factoryId'), '/datasets/BadDataOutput')]",
				"[concat(variables('factoryId'), '/datasets/GoodDataOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Athlete_Events')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('DataFlowblobstorage')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "athlete_events.csv",
						"container": "olympicdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ID",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Sex",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					},
					{
						"name": "Height",
						"type": "String"
					},
					{
						"name": "Weight",
						"type": "String"
					},
					{
						"name": "Team",
						"type": "String"
					},
					{
						"name": "NOC",
						"type": "String"
					},
					{
						"name": "Games",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Season",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Sport",
						"type": "String"
					},
					{
						"name": "Event",
						"type": "String"
					},
					{
						"name": "Medal",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NOCRegions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('DataFlowblobstorage')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "noc_regions.csv",
						"container": "olympicdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "NOC",
						"type": "String"
					},
					{
						"name": "region",
						"type": "String"
					},
					{
						"name": "notes",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BadDataOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('DataFlowblobstorage')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adfbaddata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GoodDataOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('DataFlowblobstorage')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adfgooddata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		}
	]
}